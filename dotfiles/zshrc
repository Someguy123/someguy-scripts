# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH
# Path to your oh-my-zsh installation.
if [[ -d "$HOME/.oh-my-zsh" ]]; then
  export ZSH="$HOME/.oh-my-zsh"
elif [[ -d "/etc/oh-my-zsh" ]]; then
  export ZSH="/etc/oh-my-zsh"
else
  echo "CRITICAL ERROR: could not find oh-my-zsh in $HOME/.oh-my-zsh or /etc/oh-my-zsh"
fi


# Set name of the theme to load. Optionally, if you set this to "random"
# it'll load a random theme each time that oh-my-zsh is loaded.
# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes
ZSH_THEME="fino"


# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion. Case
# sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# HIST_STAMPS="mm/dd/yyyy"

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.

plugins=(
  git
  command-not-found
  docker
)

source $ZSH/oh-my-zsh.sh

# Global simple line separator used by the various helpers
LINE="============================================"

# load zsh_files from homedir. if that's not found, try etc
if [[ -d "$HOME/.zsh_files" ]]; then
  ZSHFILES_DIR="$HOME/.zsh_files"
elif [[ -d "/etc/zsh_files" ]]; then
  ZSHFILES_DIR="/etc/zsh_files"
fi

if ! [ -z ${ZSHFILES_DIR+x} ]; then 
  # load script helpers
  source "$ZSHFILES_DIR/colors.zsh"      # Terminal colours such as $RED, $YELLOW etc.
  source "$ZSHFILES_DIR/gnusafe.zsh"     # GNU Utility sanity checker
  source "$ZSHFILES_DIR/ssh.zsh"         # Helpers such as await-ssh, ssh-reset
  source "$ZSHFILES_DIR/rsync.zsh"       # brsync - better rsync
  source "$ZSHFILES_DIR/steem.zsh"       # Steem RPC related e.g. rpc_rq, rpc_get_time
  if [[ "$(uname -s)" == "Darwin" ]]; then
      source "$ZSHFILES_DIR/osx.zsh"     # OSX specific functions
  fi
  source "$ZSHFILES_DIR/zshreload.zsh"   # ZSH Hook to recommend reloading after editing zshrc
else
  echo "WARNING: failed to find ~/.zsh_files and /etc/zsh_files - some things may break..."
fi

# enable "help" for zsh built-ins
# e.g. $ help read
unalias run-help 2>/dev/null
autoload run-help
# if help isn't working properly, try setting HELPDIR
# to the correct location of the help files
# HELPDIR="/usr/local/share/zsh/help"
alias help=run-help

# small helpers to get external IPv4 and IPv6
myip () {
  echo "${RED}$LINE"
  echo
  echo "${BLUE}IPv4:${RESET}"
  echo "$(myip4)"
  echo 
  echo "${GREEN}IPv6:${RESET}"
  echo "$(myip6)"
  echo
  echo "${RED}$LINE${RESET}"
}
myip4 () {
  curl -4 -fsSL http://icanhazip.com
}
myip6 () {
  curl -6 -fsSL http://icanhazip.com
}

# quick edit access to zshrc and vimrc
alias zshrc="vim ~/.zshrc"
alias vimrc="vim ~/.vimrc"
# Python Virtualenv shortcuts
alias activate="source venv/bin/activate"
alias mkvenv="python3 -m venv venv; echo 'Made virtual env @ ./venv'"

alias l='ls -lah'
export LS_OPTIONS='--color=auto'
if [ -x "$(command -v dircolors)" ]; then
  eval "`dircolors`"
  alias ls='ls $LS_OPTIONS'
  alias ll='ls $LS_OPTIONS -l'
  alias l='ls $LS_OPTIONS -lah'
fi

# Node Version Manager
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

export EDITOR='vim'

# for Linux servers, if running as a normal user, alias important commands to use sudo
if [[ "$(uname -s)" == "Linux" && [[ $UID != 0 && $EUID != 0 ]] ]]; then
  alias su='sudo su -'
  alias apt='sudo apt'
  alias apt-get='sudo apt-get'
  alias systemctl='sudo systemctl'
  alias sysctl='sudo sysctl'
  alias service='sudo service'
  alias journalctl='sudo journalctl'
  alias ip='sudo ip'
  alias ifconfig='sudo ifconfig'
  alias route='sudo route'
fi
